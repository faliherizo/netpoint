<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.0.3.xsd">

	<beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleHierarchyVoter">
			<beans:constructor-arg ref="roleHierarchy" />
	</beans:bean>
	<beans:bean id="roleHierarchy"
		        class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		    <beans:property name="hierarchy">
				<beans:value>
					ROLE_SUP > ROLE_ADMIN
					ROLE_ADMIN > ROLE_GROSSISTE
			    	ROLE_GROSSISTE > ROLE_REVENDEUR
			        ROLE_REVENDEUR > ROLE_COMMERCIALE
			        ROLE_COMMERCIALE > ROLE_TECHINICIEN
			        ROLE_TECHINICIEN > ROLE_CLIENT
				</beans:value>
		    </beans:property>
	</beans:bean>
	<global-method-security secured-annotations="enabled" pre-post-annotations="enabled"/>
	<http auto-config='true' use-expressions="true">
		<intercept-url pattern="/WEB-INF/jsp/revendeurs/**" access="hasAnyRole('ROLE_SUP', 'ROLE_ADMIN', 'ROLE_REVENDEUR')"  />
		<intercept-url pattern="/administration/**" access="hasAnyRole('ROLE_SUP', 'ROLE_ADMIN') " />
		<intercept-url pattern="/revendeurs/**" access="hasAnyRole('ROLE_SUP', 'ROLE_ADMIN', 'ROLE_REVENDEUR')"  />
		<intercept-url pattern="/css/**" filters="none" />
		<intercept-url pattern="/newUser*" access="hasAnyRole('ROLE_SUP', 'ROLE_ADMIN', 'ROLE_REVENDEUR', 'ROLE_GROSSISTE')" />
		<intercept-url pattern="/listUser*" access="hasAnyRole('ROLE_SUP', 'ROLE_ADMIN', 'ROLE_REVENDEUR', 'ROLE_COMMERCIALE', 'ROLE_GROSSISTE')" />
		<intercept-url pattern="/editUser*" access="hasAnyRole('ROLE_SUP','ROLE_ADMIN', 'ROLE_REVENDEUR','ROLE_COMMERCIALE','ROLE_GROSSISTE')" />
		<intercept-url pattern="/newRevendeur*" access="hasAnyRole('ROLE_SUP', 'ROLE_ADMIN', 'ROLE_REVENDEUR', 'ROLE_GROSSISTE')" />
		<intercept-url pattern="/UpdateRevendeur*" access="hasAnyRole('ROLE_SUP', 'ROLE_ADMIN', 'ROLE_REVENDEUR','ROLE_GROSSISTE')" />
		<intercept-url pattern="/newProduct*" access="hasAnyRole('ROLE_SUP', 'ROLE_ADMIN', 'ROLE_GROSSISTE')" />
		<intercept-url pattern="/login*" filters="none" />
		<intercept-url pattern="/newClient*" access="hasAnyRole('ROLE_SUP', 'ROLE_ADMIN', 'ROLE_REVENDEUR', 'ROLE_GROSSISTE')"/>
		<intercept-url pattern="/evolutionsVentes*" access="hasAnyRole('ROLE_SUP', 'ROLE_ADMIN', 'ROLE_REVENDEUR', 'ROLE_GROSSISTE')"/>
		<intercept-url pattern="/myProfil*" access="isAuthenticated()" />
		<intercept-url pattern="/listRevendeurs*" access="isAuthenticated()" />
		<intercept-url pattern="/WEB-INF/jsp/administration/**" access="hasAnyRole('ROLE_ADMIN','ROLE_SUP')" />
		<intercept-url pattern="/commandesMoisEnCours" access="hasAnyRole('ROLE_SUP', 'ROLE_ADMIN','ROLE_REVENDEUR','ROLE_COMMERCIALE', 'ROLE_GROSSISTE', 'ROLE_CLIENT')" />
		<intercept-url pattern="/newProduct" access="hasAnyRole('ROLE_GROSSISTE')" />
		<access-denied-handler error-page="/accessdenied"/>
		<intercept-url pattern="/erreur*" filters="none"/>
		<intercept-url pattern="/webservice/*" filters="none"/>
		<form-login login-page="/login" default-target-url="/commandesMoisEnCours"
		authentication-failure-handler-ref="authenticationFailureHandler" always-use-default-target="true"  />
		<logout invalidate-session="true" logout-url="/logout" />
		<intercept-url pattern="/endpoints/*" access="permitAll"/>
		<intercept-url pattern="/schemas/*" filters="none"/>
		 <!-- Maximum une session ouverte par utilisateur -->
      <!--   <session-management>
        	<concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/>
        </session-management>
      -->
	</http>
 <beans:bean id="daoAuthenticationProvider"
 		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
  		<beans:property name="userDetailsService" ref="userDetailsService"/>
	</beans:bean>
	
	<beans:bean id="authenticationManager"
    	class="org.springframework.security.authentication.ProviderManager">
  		<beans:property name="providers">
	    	<beans:list>
	      		<beans:ref local="daoAuthenticationProvider" />
	    	</beans:list>
  		</beans:property>
	</beans:bean>
	
	<authentication-manager>
	    <authentication-provider user-service-ref="userDetailsService">
	    	<password-encoder ref="passwordEncoder"/>
	    </authentication-provider>
    </authentication-manager>
		<beans:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
		
		<beans:bean id="authenticationFailureHandler" class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
    <beans:property name="defaultFailureUrl" value="/login?login_error=1"/>
    <beans:property name="exceptionMappings">
        <beans:map>
        <beans:entry><beans:key><beans:value>org.springframework.security.authentication.LockedException</beans:value></beans:key>
            <beans:value>/login?login_error=2</beans:value></beans:entry>
            <beans:entry><beans:key><beans:value>org.springframework.security.authentication.DisabledException</beans:value></beans:key>
            <beans:value>/login?login_error=3</beans:value></beans:entry>
            <beans:entry><beans:key><beans:value>org.springframework.security.authentication.AuthenticationServiceException</beans:value></beans:key>
            <beans:value>/login?login_error=4</beans:value></beans:entry>
            <beans:entry><beans:key><beans:value>org.springframework.security.authentication.AccountExpiredException</beans:value></beans:key>
            <beans:value>/login?login_error=5</beans:value></beans:entry>
            <beans:entry><beans:key><beans:value>org.springframework.security.core.userdetails.UsernameNotFoundException</beans:value></beans:key>
            <beans:value>/login?login_error=6</beans:value></beans:entry>
            <beans:entry><beans:key><beans:value>org.springframework.security.authentication.BadCredentialsException</beans:value></beans:key>
            <beans:value>/login?login_error=7</beans:value></beans:entry>
            <!--  <beans:entry><beans:key><beans:value>org.springframework.security.authentication.AuthenticationCredentialsNotFoundException</beans:value></beans:key>
            <beans:value>/login?login_error=AuthenticationCredentialsNotFound</beans:value></beans:entry>
            <beans:entry><beans:key><beans:value>org.springframework.security.authentication.AuthenticationServiceException</beans:value></beans:key>
            <beans:value>/login?login_error=AuthenticationServiceException</beans:value></beans:entry>
        	<beans:entry><beans:key><beans:value>org.springframework.security.authentication.InsufficientAuthenticationException</beans:value></beans:key>
            <beans:value>/login?login_error=InsufficientAuthenticationException</beans:value></beans:entry>
            <beans:entry><beans:key><beans:value>org.springframework.security.authentication.ProviderNotFoundException</beans:value></beans:key>
            <beans:value>/login?login_error=ProviderNotFoundException</beans:value></beans:entry>
            <beans:entry><beans:key><beans:value>org.springframework.security.authentication.SessionAuthenticationException</beans:value></beans:key>
            <beans:value>/login?login_error=SessionAuthenticationException</beans:value></beans:entry>
            -->
        </beans:map>
    </beans:property>
</beans:bean>
<!--
	
exemple
<sec:authorize ifAllGranted="ROLE_USER">
2
Utilisateur : <sec:authentication property="principal.username"/>
3
</sec:authorize>
	
	

	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="jdbcUserService">
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="jdbcUserService"
		class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="usersByUsernameQuery"
			value="select a.login as username, a.password as password,e.code_etat_compte as enabled from utilisateur a, etat_compte e where a.login=? and a.id_etat_compte =e.id_etat_compte" />
		<beans:property name="authoritiesByUsernameQuery"
			value="select a.login as username,p.role_user as authority from utilisateur a, profil p where a.login=? and a.id_profil =p.id_profil " />
	</beans:bean>

	<beans:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	-->
</beans:beans>